syntax = "proto3";

package greet;
option go_package="./greet/greetpb";

message Greeting {
    string first_name = 1;
    string last_name = 2;
}

//definindo a request
message GreetRequest {
    Greeting greeting = 1;
}

//definindo resposta
message GreetResponse {
    string result = 1;
}

//definição request ManyTimes(uma request para várias responses)
message GreetManyTimesRequest{
    Greeting greeting = 1;
}

message GreetManyTimesResponse{
    string result = 1;
}

//definição request e response client streaming
message LongGreetRequest{
    Greeting greeting = 1;
}

message LongGreetResponse{
    string result = 1;
}

//Definição biderectional streaming req e res
message GreetEveryOneRequest{
    Greeting greeting = 1;
}

message GreetEveryOneResponse{
    string result =1;
}

//exemplo usano dead line
message GreetWithDeadLineRequest{
    Greeting greeting = 1;
}

message GreetWithDeadLineResponse{
    string result = 1;
}

service GreetService{
    //definindo uma unary api
    //Greet recebe uma request e retorna uma response
    rpc Greet(GreetRequest) returns (GreetResponse){};
    
    //difindo server streaming 
    rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse){};

    //definindo client streaming 
    rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse){};

    //definindo bidirectional streaming
    rpc GreetEveryOne(stream GreetEveryOneRequest)returns(stream GreetEveryOneResponse){};
    
    //definição de deadline em unary api
    rpc GreetWithDeadLine(GreetWithDeadLineRequest)returns(GreetWithDeadLineResponse){};
}